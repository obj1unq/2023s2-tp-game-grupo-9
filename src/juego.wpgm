import wollok.game.*
import Chef.*
import direcciones.*
import extras.*
import Mesada.*
import timer.*
import Ingrediente.*
import perk.*
import randomizer.*


program juego {
	
	const jugador = new Chef()
	game.addVisual(jugador)
	
	// configurar el tablero
	game.width(13)
	game.height(8)
	game.cellSize(80)
	game.boardGround("assets/background.png")
	
	// agregar visuales
	game.addVisualIn(timer, game.at(9, 7))
	
	// Fila de abajo
	const mesadasLibresFilAbj = #{ 2, 4 }
	(#{ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }).forEach({ x => 
		if (!mesadasLibresFilAbj.contains(x)) {
			game.addVisualIn(new Mesada(), game.at(x, 0))
		}
		game.addVisualIn(new TablaDeCortar(), game.at(2, 0))
		game.addVisualIn(new TablaDeCortar(), game.at(4, 0))
	})
	
	// Fila de arriba
	const mesadasLibresFilArr = #{ 2, 3, 8, 9, 10, 11 }
	(#{ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }).forEach({ x => 
		if (!mesadasLibresFilArr.contains(x)) {
			game.addVisualIn(new Mesada(), game.at(x, 7))
		}
		game.addVisualIn(new Plancha(), game.at(8, 7))
		game.addVisualIn(new Plancha(), game.at(10, 7))
		game.addVisualIn(new Plancha(), game.at(11, 7))
	})
	
	// Columna izquierda
	const mesadasLibresColIzq = #{ 6, 5, 4, 3, 1 }
	(#{ 1, 2, 3, 4, 5, 6 }).forEach({ x =>
		if (!mesadasLibresColIzq.contains(x)) {
			game.addVisualIn(new Mesada(), game.at(0, x))
		}
		game.addVisualIn(new DespensaDeTomate(), game.at(0, 6))
		game.addVisualIn(new DespensaDeCarne(), game.at(0, 5))
		game.addVisualIn(new DespensaDeLechuga(), game.at(0, 4))
		game.addVisualIn(new DespensaDePan(), game.at(0, 3))
		game.addVisualIn(new Tacho(), game.at(0, 1))
	})
	
	// Columna derecha
	const mesadasLibresColDer = #{ 2, 3, 4 }
	(#{ 1, 2, 3, 4, 5, 6 }).forEach({ x => 
		if (!mesadasLibresColDer.contains(x)) {
			game.addVisualIn(new Mesada(), game.at(12, x))
		}
	})
	
	// Acciones
	keyboard.up().onPressDo({ jugador.arriba() })
	keyboard.down().onPressDo({ jugador.abajo() })
	keyboard.left().onPressDo({ jugador.izquierda() })
	keyboard.right().onPressDo({ jugador.derecha() })
	keyboard.t().onPressDo({ jugador.agarrarOSoltarObjeto() })
	
	//timer
	game.onTick(1000,"descontar tiempo" ,{timer.descontarTiempo()})
	game.schedule(1000.randomUpTo(96000), {=> perk.aparicion()})
	game.onCollideDo(jugador, {pocion => pocion.esActivada(jugador)})
	
	game.start()
}
